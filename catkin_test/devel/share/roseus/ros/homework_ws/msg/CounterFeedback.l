;; Auto-generated. Do not edit!


(when (boundp 'homework_ws::CounterFeedback)
  (if (not (find-package "HOMEWORK_WS"))
    (make-package "HOMEWORK_WS"))
  (shadow 'CounterFeedback (find-package "HOMEWORK_WS")))
(unless (find-package "HOMEWORK_WS::COUNTERFEEDBACK")
  (make-package "HOMEWORK_WS::COUNTERFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude CounterFeedback.msg.html


(defclass homework_ws::CounterFeedback
  :super ros::object
  :slots (_counts_elapsed ))

(defmethod homework_ws::CounterFeedback
  (:init
   (&key
    ((:counts_elapsed __counts_elapsed) 0)
    )
   (send-super :init)
   (setq _counts_elapsed (round __counts_elapsed))
   self)
  (:counts_elapsed
   (&optional __counts_elapsed)
   (if __counts_elapsed (setq _counts_elapsed __counts_elapsed)) _counts_elapsed)
  (:serialization-length
   ()
   (+
    ;; uint32 _counts_elapsed
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _counts_elapsed
       (write-long _counts_elapsed s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _counts_elapsed
     (setq _counts_elapsed (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get homework_ws::CounterFeedback :md5sum-) "cca3cfadafd90f6c2989b5f5e521eb59")
(setf (get homework_ws::CounterFeedback :datatype-) "homework_ws/CounterFeedback")
(setf (get homework_ws::CounterFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
uint32 counts_elapsed

")



(provide :homework_ws/CounterFeedback "cca3cfadafd90f6c2989b5f5e521eb59")


